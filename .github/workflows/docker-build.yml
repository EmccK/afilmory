name: Build and Push Multi-Architecture Docker Images

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
    types: [closed]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Convert repository name to lowercase
        id: lowercase
        run: |
          echo "IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.lowercase.outputs.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha,scope=${{ github.ref_name }}-buildx
            type=registry,ref=${{ env.REGISTRY }}/${{ steps.lowercase.outputs.IMAGE_NAME }}:buildcache
            type=registry,ref=${{ env.REGISTRY }}/${{ steps.lowercase.outputs.IMAGE_NAME }}:latest
          cache-to: |
            type=gha,mode=max,scope=${{ github.ref_name }}-buildx
            type=registry,ref=${{ env.REGISTRY }}/${{ steps.lowercase.outputs.IMAGE_NAME }}:buildcache,mode=max
            type=inline
          build-args: |
            S3_ACCESS_KEY_ID=${{ secrets.S3_ACCESS_KEY_ID }}
            S3_SECRET_ACCESS_KEY=${{ secrets.S3_SECRET_ACCESS_KEY }}
            GIT_TOKEN=${{ secrets.GIT_TOKEN }}
            PG_CONNECTION_STRING=${{ secrets.PG_CONNECTION_STRING }}
          provenance: false
          sbom: false

      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}